{"version":3,"sources":["ship.js"],"names":["ship","require","exports","ship_list","req","res","send","ship_detail","console","log","params","id","findById","result","status","find","theships","ship_create_post","body","document","Model","yearofmanufacturing","color","save","ship_delete","ship_update_put","JSON","stringify","toUpdate","ship_view_all_Page","render","title","results","findByIdAndDelete","ship_view_one_Page","query","toShow","ship_create_Page","err","ship_update_Page","ship_delete_Page"],"mappings":";;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAAlB,C,CACA;;;AACAC,OAAO,CAACC,SAAR,GAAoB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACnCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,4BAAT;AACH,CAFD,C,CAGA;;;AACAJ,OAAO,CAACK,WAAR,GAAsB,iBAAeH,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAClBG,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAYL,GAAG,CAACM,MAAJ,CAAWC,EAAnC;AADkB;AAAA;AAAA,0CAGCX,IAAI,CAACY,QAAL,CAAeR,GAAG,CAACM,MAAJ,CAAWC,EAA1B,CAHD;;AAAA;AAGdE,UAAAA,MAHc;AAIdR,UAAAA,GAAG,CAACC,IAAJ,CAASO,MAAT;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ,uCAAsCF,GAAG,CAACM,MAAJ,CAAWC,EAAjD;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAUAT,OAAO,CAACC,SAAR,GAAoB,kBAAeC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAIKL,IAAI,CAACe,IAAL,EAJL;;AAAA;AAIZC,UAAAA,QAJY;AAMZX,UAAAA,GAAG,CAACC,IAAJ,CAASU,QAAT;AANY;AAAA;;AAAA;AAAA;AAAA;AAYZX,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AAEAT,UAAAA,GAAG,CAACC,IAAJ;;AAdY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,C,CAmBA;;;AACAJ,OAAO,CAACe,gBAAR,GAA2B,kBAAeb,GAAf,EAAoBC,GAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBG,UAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACc,IAAhB;AACIC,UAAAA,QAFmB,GAER,IAAInB,IAAJ,EAFQ;AAGvBmB,UAAAA,QAAQ,CAACC,KAAT,GAAiBhB,GAAG,CAACc,IAAJ,CAASE,KAA1B;AACAD,UAAAA,QAAQ,CAACE,mBAAT,GAA+BjB,GAAG,CAACc,IAAJ,CAASG,mBAAxC;AACAF,UAAAA,QAAQ,CAACG,KAAT,GAAiBlB,GAAG,CAACc,IAAJ,CAASI,KAA1B;AALuB;AAAA;AAAA,0CAOAH,QAAQ,CAACI,IAAT,EAPA;;AAAA;AAOfV,UAAAA,OAPe;AAQnBR,UAAAA,GAAG,CAACC,IAAJ,CAASO,OAAT;AARmB;AAAA;;AAAA;AAAA;AAAA;AAWnBR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ;;AAZmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B,C,CAgBA;;;AACAJ,OAAO,CAACsB,WAAR,GAAsB,UAASpB,GAAT,EAAcC,GAAd,EAAmB;AACrCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,yCAAyCF,GAAG,CAACM,MAAJ,CAAWC,EAA7D;AACH,CAFD,C,CAIA;;;AACAT,OAAO,CAACuB,eAAR,GAA0B,kBAAerB,GAAf,EAAoBC,GAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtBG,UAAAA,OAAO,CAACC,GAAR,wBAA4BL,GAAG,CAACM,MAAJ,CAAWC,EAAvC,0BACFe,IAAI,CAACC,SAAL,CAAevB,GAAG,CAACc,IAAnB,CADE;AADsB;AAAA;AAAA,0CAIGlB,IAAI,CAACY,QAAL,CAAeR,GAAG,CAACM,MAAJ,CAAWC,EAA1B,CAJH;;AAAA;AAIdiB,UAAAA,QAJc;AAKlB;AACA,cAAGxB,GAAG,CAACc,IAAJ,CAASE,KAAZ,EACOQ,QAAQ,CAACR,KAAT,GAAiBhB,GAAG,CAACc,IAAJ,CAASE,KAA1B;AACP,cAAGhB,GAAG,CAACc,IAAJ,CAASG,mBAAZ,EAAiCO,QAAQ,CAACP,mBAAT,GAA+BjB,GAAG,CAACc,IAAJ,CAASG,mBAAxC;AACjC,cAAGjB,GAAG,CAACc,IAAJ,CAASI,KAAZ,EAAmBM,QAAQ,CAACN,KAAT,GAAiBlB,GAAG,CAACc,IAAJ,CAASI,KAA1B;AATD;AAAA,0CAUCM,QAAQ,CAACL,IAAT,EAVD;;AAAA;AAUdV,UAAAA,QAVc;AAWlBL,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYI,QAAxB;AACAR,UAAAA,GAAG,CAACC,IAAJ,CAASO,QAAT;AAZkB;AAAA;;AAAA;AAAA;AAAA;AAclBR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ,gEAA4CF,GAAG,CAACM,MAAJ,CAAWC,EAAvD;;AAfkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B,C,CAoBA;AACA;;;AAEAT,OAAO,CAAC2B,kBAAR,GAA6B,kBAAezB,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEJL,IAAI,CAACe,IAAL,EAFI;;AAAA;AAErBC,UAAAA,QAFqB;AAGrBX,UAAAA,GAAG,CAACyB,MAAJ,CAAW,MAAX,EAAmB;AAAEC,YAAAA,KAAK,EAAE,qBAAT;AAAgCC,YAAAA,OAAO,EAAEhB;AAAzC,WAAnB;AAHqB;AAAA;;AAAA;AAAA;AAAA;AAMrBX,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ;;AAPqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B,C,CAUA;;;AACAJ,OAAO,CAACsB,WAAR,GAAsB,kBAAepB,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAClBG,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAaL,GAAG,CAACM,MAAJ,CAAWC,EAApC;AADkB;AAAA;AAAA,0CAGCX,IAAI,CAACiC,iBAAL,CAAwB7B,GAAG,CAACM,MAAJ,CAAWC,EAAnC,CAHD;;AAAA;AAGdE,UAAAA,MAHc;AAIdL,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAaI,MAAzB;AACAR,UAAAA,GAAG,CAACC,IAAJ,CAASO,MAAT;AALc;AAAA;;AAAA;AAAA;AAAA;AAOdR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB,C,CAWA;;;AACAJ,OAAO,CAACgC,kBAAR,GAA6B,kBAAe9B,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AACzBG,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAyBL,GAAG,CAAC+B,KAAJ,CAAUxB,EAA/C;AADyB;AAAA;AAAA,0CAGNX,IAAI,CAACY,QAAL,CAAeR,GAAG,CAAC+B,KAAJ,CAAUxB,EAAzB,CAHM;;AAAA;AAGrBE,UAAAA,MAHqB;AAIrBR,UAAAA,GAAG,CAACyB,MAAJ,CAAW,YAAX,EACR;AAAEC,YAAAA,KAAK,EAAE,aAAT;AAAwBK,YAAAA,MAAM,EAAEvB;AAAhC,WADQ;AAJqB;AAAA;;AAAA;AAAA;AAAA;AAQrBR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ;;AATqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B,C,CAYA;AACA;AACA;;;AACAJ,OAAO,CAACmC,gBAAR,GAA4B,UAASjC,GAAT,EAAcC,GAAd,EAAmB;AAC3CG,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,MAAG;AACCJ,IAAAA,GAAG,CAACyB,MAAJ,CAAW,YAAX,EAAyB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAzB;AACH,GAFD,CAGA,OAAMO,GAAN,EAAU;AACNjC,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,IAAAA,GAAG,CAACC,IAAJ,sBAAuBgC,GAAvB;AACH;AACJ,CATD,C,CAUA;AACA;;;AACApC,OAAO,CAACqC,gBAAR,GAA4B,kBAAenC,GAAf,EAAoBC,GAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxBG,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAwBL,GAAG,CAAC+B,KAAJ,CAAUxB,EAA9C;AADwB;AAAA;AAAA,0CAGDX,IAAI,CAACY,QAAL,CAAcR,GAAG,CAAC+B,KAAJ,CAAUxB,EAAxB,CAHC;;AAAA;AAGhBE,UAAAA,QAHgB;AAIpBR,UAAAA,GAAG,CAACyB,MAAJ,CAAW,YAAX,EAAyB;AAAEC,YAAAA,KAAK,EAAE,aAAT;AAAwBK,YAAAA,MAAM,EAAEvB;AAAhC,WAAzB;AAJoB;AAAA;;AAAA;AAAA;AAAA;AAOpBR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B,C,CAWA;;;AACAJ,OAAO,CAACsC,gBAAR,GAA2B,kBAAepC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AACvBG,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAyBL,GAAG,CAAC+B,KAAJ,CAAUxB,EAA/C;AADuB;AAAA;AAAA,0CAGJX,IAAI,CAACY,QAAL,CAAcR,GAAG,CAAC+B,KAAJ,CAAUxB,EAAxB,CAHI;;AAAA;AAGnBE,UAAAA,MAHmB;AAInBR,UAAAA,GAAG,CAACyB,MAAJ,CAAW,YAAX,EAAyB;AAAEC,YAAAA,KAAK,EAAE,aAAT;AAAwBK,YAAAA,MAAM,EAC/DvB;AADiC,WAAzB;AAJmB;AAAA;;AAAA;AAAA;AAAA;AAQnBR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX;AACAT,UAAAA,GAAG,CAACC,IAAJ;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["var ship = require('../models/ship');\r\n// List of all ships\r\nexports.ship_list = function(req, res) {\r\n    res.send('NOT IMPLEMENTED: ship list');\r\n};\r\n// for a specific ship. \r\nexports.ship_detail = async function(req, res) { \r\n    console.log(\"detail\"  + req.params.id) \r\n    try { \r\n        result = await ship.findById( req.params.id) \r\n        res.send(result) \r\n    } catch (error) { \r\n        res.status(500) \r\n        res.send(`{\"error\": document for id ${req.params.id} not found`); \r\n    } \r\n}; \r\nexports.ship_list = async function(req, res) {\r\n\r\n    try{\r\n\r\n        theships = await ship.find();\r\n\r\n        res.send(theships);\r\n\r\n    }\r\n\r\n    catch(err){\r\n\r\n        res.status(500);\r\n\r\n        res.send(`{\"error\": ${err}}`);\r\n\r\n    }  \r\n\r\n};\r\n// Handle ship create on POST.\r\nexports.ship_create_post = async function(req, res) {\r\n    console.log(req.body)\r\n    let document = new ship();\r\n    document.Model = req.body.Model;\r\n    document.yearofmanufacturing = req.body.yearofmanufacturing;\r\n    document.color = req.body.color;\r\n    try{\r\n        let result = await document.save();\r\n        res.send(result);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }  \r\n};\r\n\r\n// Handle ship delete form on DELETE.\r\nexports.ship_delete = function(req, res) {\r\n    res.send('NOT IMPLEMENTED: ship delete DELETE ' + req.params.id);\r\n};\r\n\r\n//Handle ship update form on PUT. \r\nexports.ship_update_put = async function(req, res) { \r\n    console.log(`update on id ${req.params.id} with body \r\n${JSON.stringify(req.body)}`) \r\n    try { \r\n        let toUpdate = await ship.findById( req.params.id) \r\n        // Do updates of properties \r\n        if(req.body.Model)  \r\n               toUpdate.Model = req.body.Model; \r\n        if(req.body.yearofmanufacturing) toUpdate.yearofmanufacturing = req.body.yearofmanufacturing; \r\n        if(req.body.color) toUpdate.color = req.body.color; \r\n        let result = await toUpdate.save(); \r\n        console.log(\"Sucess \" + result) \r\n        res.send(result) \r\n    } catch (err) { \r\n        res.status(500) \r\n        res.send(`{\"error\": ${err}: Update for id ${req.params.id} \r\nfailed`); \r\n    } \r\n}; \r\n\r\n// VIEWS\r\n// Handle a show all view\r\n\r\nexports.ship_view_all_Page = async function(req, res) {\r\n    try{\r\n        theships = await ship.find();\r\n        res.render('ship', { title: 'ship Search Results', results: theships});\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }  \r\n};\r\n// Handle ship delete on DELETE. \r\nexports.ship_delete = async function(req, res) { \r\n    console.log(\"delete \"  + req.params.id) \r\n    try { \r\n        result = await ship.findByIdAndDelete( req.params.id) \r\n        console.log(\"Removed \" + result) \r\n        res.send(result) \r\n    } catch (err) { \r\n        res.status(500) \r\n        res.send(`{\"error\": Error deleting ${err}}`); \r\n    } \r\n}; \r\n// Handle a show one view with id specified by query \r\nexports.ship_view_one_Page = async function(req, res) { \r\n    console.log(\"single view for id \"  + req.query.id) \r\n    try{ \r\n        result = await ship.findById( req.query.id) \r\n        res.render('shipdetail',  \r\n{ title: 'ship Detail', toShow: result }); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n// Handle building the view for creating a ship. \r\n// No body, no in path parameter, no query. \r\n// Does not need to be async \r\nexports.ship_create_Page =  function(req, res) { \r\n    console.log(\"create view\") \r\n    try{ \r\n        res.render('shipcreate', { title: 'ship Create'}); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n// Handle building the view for updating a ship. \r\n// query provides the id \r\nexports.ship_update_Page =  async function(req, res) { \r\n    console.log(\"update view for item \"+req.query.id) \r\n    try{ \r\n        let result = await ship.findById(req.query.id) \r\n        res.render('shipupdate', { title: 'ship Update', toShow: result }); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n// Handle a delete one view with id from query \r\nexports.ship_delete_Page = async function(req, res) { \r\n    console.log(\"Delete view for id \"  + req.query.id) \r\n    try{ \r\n        result = await ship.findById(req.query.id) \r\n        res.render('shipdelete', { title: 'ship Delete', toShow: \r\nresult }); \r\n    } \r\n    catch(err){ \r\n        res.status(500) \r\n        res.send(`{'error': '${err}'}`); \r\n    } \r\n}; \r\n "],"file":"ship.dev.js"}