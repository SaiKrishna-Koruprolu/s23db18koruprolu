{"version":3,"sources":["app.js"],"names":["express","require","path","mongoose","mongodb","session","createError","cookieParser","Account","passportLocalMongoose","logger","passport","LocalStrategy","Strategy","ship","config","connectionString","process","env","MONGO_CON","connect","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind","once","log","indexRouter","usersRouter","appRouter","selectorRouter","resourceRouter","app","use","username","password","done","findOne","err","user","message","validPassword","set","join","__dirname","json","urlencoded","extended","secret","resave","saveUninitialized","initialize","authenticate","serializeUser","deserializeUser","recreateDB","deleteMany","instance1","Model","yearofmanufacturing","color","save","then","doc","instance2","instance3","reseed","req","res","next","locals","get","status","render","module","exports"],"mappings":"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","sourcesContent":["var express = require('express');\r\nvar path = require('path');\r\nvar mongoose = require('mongoose');\r\nvar mongodb = require('mongodb');\r\nconst session = require('express-session');\r\nconst createError = require('http-errors');\r\nvar cookieParser = require('cookie-parser');\r\nvar Account =require('./models/account'); \r\nconst passportLocalMongoose = require('passport-local-mongoose');\r\nvar logger = require('morgan');\r\nvar passport = require('passport'); \r\nconst LocalStrategy = require('passport-local').Strategy;\r\n\r\nvar ship = require(\"./models/ship\");\r\nrequire('dotenv').config();\r\nconst connectionString =\r\n  process.env.MONGO_CON\r\nmongoose = require('mongoose');\r\nmongoose.connect(connectionString,\r\n  {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n  });\r\nvar db = mongoose.connection;\r\n//Bind connection to error event\r\ndb.on('error', console.error.bind(console, 'MongoDB connectionerror:'));\r\ndb.once(\"open\", function () {\r\n  console.log(\"Connection to DB succeeded\")\r\n});\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar appRouter = require('./routes/ship');\r\n//var gridbuildRouter = require('./routes/gridbuild');\r\nvar selectorRouter = require('./routes/selector');\r\nvar resourceRouter = require('./routes/resource');\r\n\r\n\r\nvar app = express();\r\npassport.use(new LocalStrategy( \r\n  function(username, password, done) { \r\n    Account.findOne({ username: username }, function (err, user) { \r\n      if (err) { return done(err); } \r\n      if (!user) { \r\n        return done(null, false, { message: 'Incorrect username.' }); \r\n      } \r\n      if (!user.validPassword(password)) { \r\n        return done(null, false, { message: 'Incorrect password.' }); \r\n      } \r\n      return done(null, user); \r\n    }); \r\n  }))\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\n\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(require('express-session')({ \r\n  secret: 'keyboard cat', \r\n  resave: false, \r\n  saveUninitialized: false \r\n})); \r\napp.use(passport.initialize()); \r\napp.use(passport.session()); \r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/ship', appRouter);\r\n//app.use('/gridbuild', gridbuildRouter);\r\napp.use('/selector', selectorRouter);\r\napp.use('/resource', resourceRouter);\r\n\r\n\r\n\r\n// passport config \r\n// Use the existing connection \r\n// The Account model  \r\n\r\npassport.use(new LocalStrategy(Account.authenticate())); \r\npassport.serializeUser(Account.serializeUser()); \r\npassport.deserializeUser(Account.deserializeUser()); \r\n\r\n\r\n// We can seed the collection if needed on server start\r\nasync function recreateDB(){\r\n // Delete everything\r\n await ship.deleteMany();\r\n let instance1 = new\r\nship({Model:\"battleship\", yearofmanufacturing:2022,color:\"Red\"});\r\n instance1.save().then(doc=> {\r\n console.log(\"First ship details saved\")}\r\n ).catch(err=>{\r\n  console.error(err)})\r\n let instance2 = new\r\n ship({Model:\"cruiser\", yearofmanufacturing:2011,color:\"silver\"});\r\n instance2.save().then(doc=> {\r\n  console.log(\"Second ship details saved\")}\r\n  ).catch(err=>{\r\n   console.error(err)})\r\n  \r\n  let instance3 = new\r\n  ship({Model:\" destroyer\", yearofmanufacturing:2023,color:\" Blue\"});\r\n  instance3.save().then(doc=> {\r\n    console.log(\"Third ship details saved\")}\r\n    ).catch(err=>{\r\n     console.error(err)})  \r\n}\r\nlet reseed = true;\r\nif (reseed) { recreateDB();}\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\nmodule.exports = app;"],"file":"app.dev.js"}