{"version":3,"sources":["index.js"],"names":["express","require","passport","Router","Account","router","get","req","res","user","title","findOne","username","body","then","err","render","message","account","newAccount","register","password","log","redirect","post","authenticate","session","returnTo","next","logout","status","send"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YADnBD,OAAOA,QAAUG,SAGjBC,QAAUH,QAAQ,qBAEtBI,OAAOC,IAAI,IAAK,SAAUC,EAAKC,GAH3BH,EAAAA,OAASL,QAAQG,CAAAA,MAArB,WAAAM,KAAAF,EAAAE,SAOAJ,OAAOC,IAAI,YAAa,SAASC,EAAKC,GAJtCH,EAAOC,OAAP,WAA0BC,CAAVG,MAAoB,4BACSD,OAAAA,KAAOF,YAAIE,SAAAA,EAAAA,GAApDL,QAAAO,QAAA,CAAAC,SAAAL,EAAAM,KAAAD,WAAAE,KAAA,SAAAC,EAAAN,GAGGH,GAAIS,EACP,OAAWP,EAAXQ,OAAuB,WAAA,CAAAN,MAAA,eAASO,QAAA,qBAAAC,QAAAX,EAAAM,KAAAD,WADpC,GAAAH,GAAA,GAIY,OAAAD,EAAZQ,OAAyB,WAAcR,CAAdE,MAAmB,eAChCC,QAAQ,gBAAAO,QAAAX,EAAAM,KAAAD,WAETG,IAAHI,EAAQ,IAAAf,QAAA,CAAAQ,SAAAL,EAAAM,KAAAD,WACJR,QAAUgB,SAAQD,EAAYZ,EAAAM,KAAAQ,SAAA,SAAAN,EAAAN,GAAEC,OAAOK,EAC1BP,EAAAQ,OAAA,WADiB,CAAAN,MAAA,eACkBO,QAAML,eAAAA,QAAAA,EAAAA,KAAAA,WACzDH,GAEmCC,QAAOY,IAAA,yBACnCL,EAAOM,SAAE,MAUFf,EAAIQ,OAAO,WAAW,CAAEN,MAAO,eAZ/BO,QAAA,eAAAC,QAAAX,EAAAM,KAAAD,iBAKfP,OAAAC,IAAIa,SAAa,SAAIf,EAAQI,GAAEI,EAAAA,OAAQ,QAAG,CAASA,MAAAA,iBAAAA,KAAAA,EAAAA,SAE/CP,OAAAmB,KAAIT,SAAKb,SAAAuB,aAAA,SAAA,SAAAlB,EAAAC,GACLD,EAAAmB,QAAWV,UAAqBN,EAAAA,SAAOH,EAAAmB,QAATC,UAC1BV,EAAAA,SAAO,OACdZ,OAAAC,IAAA,UAAA,SAAAC,EAAAC,EAAAoB,GAsBTrB,EAAIsB,OAAQ,SAASd,GArBb,GAAIN,EAAK,OAAAmB,EAAAb,GACLP,EAAAe,SAAWP,SAAkBX,OAAAC,IAA7B,QAAA,SAAAC,EAAAC,GAEHA,EAAAsB,OAAA,KAAAC,KAAA,WAEDvB,OAAAA,QAAIe","file":"index.min.js","sourcesContent":["var express = require('express');\r\nvar passport = require('passport');\r\nvar router = express.Router();\r\nvar Account = require('../models/account');\r\n\r\nrouter.get('/', function (req, res) {\r\n    res.render('index', { title: 'ship App', user : req.user });\r\n});\r\n\r\nrouter.get('/register', function(req, res) {\r\n    res.render('register', { title: 'ship App Registration'});\r\n});\r\n\r\nrouter.post('/register', function(req, res) {\r\n    Account.findOne({ username: req.body.username }).then((err, user) =>{\r\n\r\n        if(err) {\r\n            return res.render('register', { title: 'Registration',\r\n                message: 'Registration error', account : req.body.username })\r\n        }\r\n        if(user == {} ){\r\n            return res.render('register', { title: 'Registration',\r\n                message: 'Existing User', account : req.body.username })\r\n        }\r\n\r\n        let newAccount = new Account({ username : req.body.username });\r\n        Account.register(newAccount, req.body.password, function(err, user){\r\n            if (err) {\r\n                return res.render('register', { title: 'Registration',\r\n                    message: 'access error', account : req.body.username })\r\n            }\r\n            if(!user){\r\n                return res.render('register',{ title: 'Registration',\r\n                    message: 'access error', account : req.body.username })\r\n            }\r\n            console.log('Sucess, redirect');\r\n            res.redirect('/');\r\n        })\r\n    })\r\n});\r\n\r\nrouter.get('/login', function(req, res) {\r\n    res.render('login', { title: 'ship App Login', user : req.user });\r\n});\r\n\r\nrouter.post('/login', passport.authenticate('local'), function(req, res) {\r\n    if(req.session.returnTo)\r\n        res.redirect(req.session.returnTo);\r\n    res.redirect('/');\r\n});\r\n\r\nrouter.get('/logout', function(req, res, next) { // use post or delete for better safety\r\n    req.logout( function(err) {\r\n        if (err) { return next(err);}\r\n        res.redirect('/');\r\n    });\r\n});\r\n\r\nrouter.get('/ping', function(req, res){\r\n    res.status(200).send(\"pong!\");\r\n});\r\n\r\nmodule.exports = router;"]}