{"version":3,"sources":["index.js"],"names":["express","require","passport","Router","Account","router","get","req","res","user","title","findOne","username","body","then","err","render","message","account","post","newAccount","password","log","redirect","authenticate","next","register","status","send","module","exports"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YADnBD,OAAOA,QAAUG,SAGjBC,QAAUH,QAAQ,qBAEtBI,OAAOC,IAAI,IAAK,SAAUC,EAAKC,GAH3BH,EAAAA,OAASL,QAAQG,CAAAA,MAArB,WAAAM,KAAAF,EAAAE,SAOAJ,OAAOC,IAAI,YAAa,SAASC,EAAKC,GAJtCH,EAAOC,OAAP,WAA0BC,CAAVG,MAAoB,4BACSD,OAAAA,KAAOF,YAAIE,SAAAA,EAAAA,GAApDL,QAAAO,QAAA,CAAAC,SAAAL,EAAAM,KAAAD,WAAAE,KAAA,SAAAC,EAAAN,GADJ,GAAAM,EAIW,OAAAP,EAAXQ,OAAwB,WAAA,CAAmBN,MAAA,eAAAO,QAAA,qBAAAC,QAAAX,EAAAM,KAAAD,WACdF,GAAOD,GAAA,GAAhC,OAAAD,EAAAQ,OAAA,WAAA,CAAAN,MAAA,eAAAO,QAAA,gBAAAC,QAAAX,EAAAM,KAAAD,WAGGO,IAAKC,EAAa,IAAAhB,QAASG,CAATK,SAAmBL,EAAAM,KAAAD,WACxCR,QAAQO,SAAQS,EAAAb,EAAAM,KAAAQ,SAAA,SAAAN,EAAAN,GAAU,OAAGF,EAA0BC,EAAMC,OAAQ,WAAA,CAAAC,MAAA,eAAAO,QAAA,eAAAC,QAAAX,EAAAM,KAAAD,WAEnDH,GAA4ES,QAAaI,IAACT,yBAApGL,EAAAe,SAAA,MAAuCf,EAAAQ,OAAT,WAAA,CAAAN,MAAA,eAAAO,QAAA,eAAAC,QAAAX,EAAAM,KAAAD,iBAGEF,OAAAA,IAAAA,SAAO,SAATH,EAAAC,GAAyBS,EAAAA,OAAO,QAAE,CAAAP,MAAlC,iBAAAD,KAAAF,EAAAE,SACjCJ,OAAAc,KAAA,SAAAjB,SAAAsB,aAAA,SAAA,SAAAjB,EAAAC,GAoBLA,EAAIe,SAAS,OAnBoBlB,OAA7BC,IAAA,UAAA,SAAAC,EAAAC,EAAAiB,GACArB,EAAAA,OAAQsB,SAASN,GACb,GAAIL,EAAK,OAAAU,EAAAV,GACLP,EAAAe,SAAWP,SAAmBX,OAAAC,IAA9B,QAAA,SAAAC,EAAAC,GACHA,EAAAmB,OAAA,KAAAC,KAAA,WAEGC,OAAAC,QAAOtB","file":"index.min.js","sourcesContent":["var express = require('express');\r\nvar passport = require('passport');\r\nvar router = express.Router();\r\nvar Account = require('../models/account');\r\n\r\nrouter.get('/', function (req, res) {\r\n    res.render('index', { title: 'ship App', user : req.user });\r\n});\r\n\r\nrouter.get('/register', function(req, res) {\r\n    res.render('register', { title: 'ship App Registration'});\r\n});\r\n\r\nrouter.post('/register', function(req, res) {\r\n    Account.findOne({ username : req.body.username }).then((err, user)=> {\r\n        if(err) {\r\n            return res.render('register', { title: 'Registration', message: 'Registration error', account : req.body.username })\r\n        }\r\n        if(user == {} ){\r\n            return res.render('register', { title: 'Registration', message: 'Existing User', account : req.body.username })\r\n        }\r\n        let newAccount = new Account({ username : req.body.username });\r\n        Account.register(newAccount, req.body.password, function(err, user){\r\n            if (err) {\r\n                return res.render('register', { title: 'Registration', message: 'access error', account : req.body.username })\r\n            }\r\n            if(!user){\r\n                return res.render('register',{ title: 'Registration', message: 'access error', account : req.body.username })\r\n            }\r\n            console.log('Sucess, redirect');\r\n            res.redirect('/');\r\n        })\r\n    }\r\n)});\r\n\r\nrouter.get('/login', function(req, res) {\r\n    res.render('login', { title: 'ship App Login', user : req.user });\r\n});\r\n\r\nrouter.post('/login', passport.authenticate('local'), function(req, res) {\r\n    res.redirect('/');\r\n});\r\n\r\nrouter.get('/logout', function(req, res, next) { // use post or delete for better safety\r\n    req.logout( function(err) {\r\n        if (err) { return next(err);}\r\n        res.redirect('/');\r\n    });\r\n});\r\n\r\nrouter.get('/ping', function(req, res){\r\n    res.status(200).send(\"pong!\");\r\n});\r\n\r\nmodule.exports=router;\r\n"]}